# BTC Billionaire
Let's imagine a lot of people send BTC to your wallet every `second` from `different countries` from different `timezones'. The amount of BTC and the time represented by abstract record looks like this:
```json
{
 "datetime": "2019-10-05T14:48:01+01:00",
 "amount": 1.1
}
```
It’s awesome! You have so much money in your wallet!!! You don't want to withdraw it and you don’t intend to in the near future because you really believe that BTC will keep growing. Recently you’ve decided to keep track of and show a history of your wallet’s wealth to everyone.
 
At this time you’ve already collected `1000 BTC`. You want to show a history of your wallet balance at the end of each `hour` between the DateTime range.
 
The data you want to provide contains an array of data that should look like:
```json
[
   {
     "datetime": "2019-10-05T13:00:00+00:00",
     "amount": 1000
   },
   {
     "datetime": "2019-10-05T14:00:00+00:00",
     "amount": 1001.1
   }
]
```
You decide to create a web server with API (any of these `GraphQL`/`REST`/`GRPC`) and use any frameworks/technologies/libraries that will help you.
​
Your server should have 2 features:
​
1) Save Record
   Input example:
   ```json
   {
     "datetime": "2019-10-05T14:45:05+07:00",
     "amount": 10
   }
   ```
   Output:
   ```
       {
           // Any output what can be recognized as successful
       }
   ```
​
2) Get history of your wallet balance at the end of each `hour` between two DateTimes
   Input example:
   ```json
   {
     "startDatetime": "2011-10-05T10:48:01+00:00",
     "endDatetime": "2011-10-05T18:48:02+00:00"
   }
   ```
   Output example:
   ```json
   [
       {
         "datetime": "2019-10-05T13:00:00+00:00",
         "amount": 1000
       },
       {
         "datetime": "2019-10-05T14:00:00+00:00",
         "amount": 1001.1
       }
   ]
   ```
​
You’re on the road to becoming super rich and famous!!! More and more people will want to send you BTC and check on your wealth history.
 
This means: your server should be ready to accept throughput with an acceptable timeout.
​
You also want to show your friends that you are an awesome BE developer.
 
This means that: 
 
 
You can use Git
Your code is clear
You know best practice and patterns
Your API can handle incorrect data
Your architecture is extendable
Your API is tested
 
Bonus points:
During the COVID-19 pandemic, you started to give out small amounts of BTC as donation. After a few hundred thousand records in and out, you decided to check your latest balance. The response time should be around the same as checking the latest balance after a few hundred records..
